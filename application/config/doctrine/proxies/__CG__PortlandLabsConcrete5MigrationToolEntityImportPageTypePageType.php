<?php

namespace DoctrineProxies\__CG__\PortlandLabs\Concrete5\MigrationTool\Entity\Import\PageType;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PageType extends \PortlandLabs\Concrete5\MigrationTool\Entity\Import\PageType\PageType implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = ['layout_sets' => NULL, 'default_page_collection' => NULL];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->layout_sets, $this->default_page_collection);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'collection', 'publish_target', 'handle', 'allowed_templates', 'templates', 'default_template', 'is_internal', 'is_frequently_added', 'launch_in_composer', 'layout_sets', 'default_page_collection', 'name', 'package'];
        }

        return ['__isInitialized__', 'id', 'collection', 'publish_target', 'handle', 'allowed_templates', 'templates', 'default_template', 'is_internal', 'is_frequently_added', 'launch_in_composer', 'name', 'package'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PageType $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->layout_sets, $this->default_page_collection);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCollection', []);

        return parent::getCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function setCollection($collection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCollection', [$collection]);

        return parent::setCollection($collection);
    }

    /**
     * {@inheritDoc}
     */
    public function getHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHandle', []);

        return parent::getHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function setHandle($handle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHandle', [$handle]);

        return parent::setHandle($handle);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublisherValidator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublisherValidator', []);

        return parent::getPublisherValidator();
    }

    /**
     * {@inheritDoc}
     */
    public function getPackage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPackage', []);

        return parent::getPackage();
    }

    /**
     * {@inheritDoc}
     */
    public function setPackage($package)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPackage', [$package]);

        return parent::setPackage($package);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowedTemplates()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowedTemplates', []);

        return parent::getAllowedTemplates();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowedTemplates($allowed_templates)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowedTemplates', [$allowed_templates]);

        return parent::setAllowedTemplates($allowed_templates);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplates()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemplates', []);

        return parent::getTemplates();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemplates($templates)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemplates', [$templates]);

        return parent::setTemplates($templates);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultTemplate', []);

        return parent::getDefaultTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultTemplate($default_template)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultTemplate', [$default_template]);

        return parent::setDefaultTemplate($default_template);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsInternal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsInternal', []);

        return parent::getIsInternal();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsInternal($is_internal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsInternal', [$is_internal]);

        return parent::setIsInternal($is_internal);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsFrequentlyAdded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsFrequentlyAdded', []);

        return parent::getIsFrequentlyAdded();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsFrequentlyAdded($is_frequently_added)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsFrequentlyAdded', [$is_frequently_added]);

        return parent::setIsFrequentlyAdded($is_frequently_added);
    }

    /**
     * {@inheritDoc}
     */
    public function getLaunchInComposer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLaunchInComposer', []);

        return parent::getLaunchInComposer();
    }

    /**
     * {@inheritDoc}
     */
    public function setLaunchInComposer($launch_in_composer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLaunchInComposer', [$launch_in_composer]);

        return parent::setLaunchInComposer($launch_in_composer);
    }

    /**
     * {@inheritDoc}
     */
    public function getLayoutSets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLayoutSets', []);

        return parent::getLayoutSets();
    }

    /**
     * {@inheritDoc}
     */
    public function setLayoutSets($layout_sets)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLayoutSets', [$layout_sets]);

        return parent::setLayoutSets($layout_sets);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishTarget()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishTarget', []);

        return parent::getPublishTarget();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishTarget($publish_target)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishTarget', [$publish_target]);

        return parent::setPublishTarget($publish_target);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultPageCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultPageCollection', []);

        return parent::getDefaultPageCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultPageCollection($default_page_collection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultPageCollection', [$default_page_collection]);

        return parent::setDefaultPageCollection($default_page_collection);
    }

    /**
     * {@inheritDoc}
     */
    public function createPublisherLogObject($publishedObject = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createPublisherLogObject', [$publishedObject]);

        return parent::createPublisherLogObject($publishedObject);
    }

}
