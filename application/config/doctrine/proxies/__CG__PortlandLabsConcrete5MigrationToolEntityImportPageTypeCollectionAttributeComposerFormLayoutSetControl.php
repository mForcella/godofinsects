<?php

namespace DoctrineProxies\__CG__\PortlandLabs\Concrete5\MigrationTool\Entity\Import\PageType;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CollectionAttributeComposerFormLayoutSetControl extends \PortlandLabs\Concrete5\MigrationTool\Entity\Import\PageType\CollectionAttributeComposerFormLayoutSetControl implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'position', 'set', 'custom_label', 'description', 'is_required', 'custom_template', 'output_control_id', 'item_identifier'];
        }

        return ['__isInitialized__', 'id', 'position', 'set', 'custom_label', 'description', 'is_required', 'custom_template', 'output_control_id', 'item_identifier'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CollectionAttributeComposerFormLayoutSetControl $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHandle', []);

        return parent::getHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function getRecordValidator(\PortlandLabs\Concrete5\MigrationTool\Batch\Validator\ValidatorInterface $batch)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecordValidator', [$batch]);

        return parent::getRecordValidator($batch);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getComposerFormLayoutSet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComposerFormLayoutSet', []);

        return parent::getComposerFormLayoutSet();
    }

    /**
     * {@inheritDoc}
     */
    public function setComposerFormLayoutSet($set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComposerFormLayoutSet', [$set]);

        return parent::setComposerFormLayoutSet($set);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomLabel', []);

        return parent::getCustomLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomLabel($custom_label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomLabel', [$custom_label]);

        return parent::setCustomLabel($custom_label);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemIdentifier', []);

        return parent::getItemIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setItemIdentifier($item_identifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemIdentifier', [$item_identifier]);

        return parent::setItemIdentifier($item_identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsRequired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsRequired', []);

        return parent::getIsRequired();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsRequired($is_required)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsRequired', [$is_required]);

        return parent::setIsRequired($is_required);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomTemplate', []);

        return parent::getCustomTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomTemplate($custom_template)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomTemplate', [$custom_template]);

        return parent::setCustomTemplate($custom_template);
    }

    /**
     * {@inheritDoc}
     */
    public function getOutputControlId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOutputControlId', []);

        return parent::getOutputControlId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOutputControlId($output_control_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOutputControlId', [$output_control_id]);

        return parent::setOutputControlId($output_control_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', []);

        return parent::getLabel();
    }

}
