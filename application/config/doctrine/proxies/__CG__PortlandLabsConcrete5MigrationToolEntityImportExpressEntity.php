<?php

namespace DoctrineProxies\__CG__\PortlandLabs\Concrete5\MigrationTool\Entity\Import\Express;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Entity extends \PortlandLabs\Concrete5\MigrationTool\Entity\Import\Express\Entity implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'collection', 'associations', 'forms', 'attributeKeys', 'id', 'name', 'handle', 'plural_handle', 'label_mask', 'supports_custom_display_order', 'description', 'include_in_public_list', 'default_view_form_id', 'default_edit_form_id', 'results_folder'];
        }

        return ['__isInitialized__', 'collection', 'associations', 'forms', 'attributeKeys', 'id', 'name', 'handle', 'plural_handle', 'label_mask', 'supports_custom_display_order', 'description', 'include_in_public_list', 'default_view_form_id', 'default_edit_form_id', 'results_folder'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Entity $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHandle', []);

        return parent::getHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function setHandle($handle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHandle', [$handle]);

        return parent::setHandle($handle);
    }

    /**
     * {@inheritDoc}
     */
    public function getPluralHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPluralHandle', []);

        return parent::getPluralHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function setPluralHandle($plural_handle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPluralHandle', [$plural_handle]);

        return parent::setPluralHandle($plural_handle);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabelMask()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabelMask', []);

        return parent::getLabelMask();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabelMask($label_mask)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabelMask', [$label_mask]);

        return parent::setLabelMask($label_mask);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupportsCustomDisplayOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupportsCustomDisplayOrder', []);

        return parent::getSupportsCustomDisplayOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setSupportsCustomDisplayOrder($supports_custom_display_order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupportsCustomDisplayOrder', [$supports_custom_display_order]);

        return parent::setSupportsCustomDisplayOrder($supports_custom_display_order);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getIncludeInPublicList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncludeInPublicList', []);

        return parent::getIncludeInPublicList();
    }

    /**
     * {@inheritDoc}
     */
    public function setIncludeInPublicList($include_in_public_list)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIncludeInPublicList', [$include_in_public_list]);

        return parent::setIncludeInPublicList($include_in_public_list);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultViewFormId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultViewFormId', []);

        return parent::getDefaultViewFormId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultViewFormId($default_view_form_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultViewFormId', [$default_view_form_id]);

        return parent::setDefaultViewFormId($default_view_form_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultEditFormId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultEditFormId', []);

        return parent::getDefaultEditFormId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultEditFormId($default_edit_form_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultEditFormId', [$default_edit_form_id]);

        return parent::setDefaultEditFormId($default_edit_form_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCollection', []);

        return parent::getCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function getResultsFolder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResultsFolder', []);

        return parent::getResultsFolder();
    }

    /**
     * {@inheritDoc}
     */
    public function setResultsFolder($results_folder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResultsFolder', [$results_folder]);

        return parent::setResultsFolder($results_folder);
    }

    /**
     * {@inheritDoc}
     */
    public function setCollection($collection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCollection', [$collection]);

        return parent::setCollection($collection);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublisherValidator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublisherValidator', []);

        return parent::getPublisherValidator();
    }

    /**
     * {@inheritDoc}
     */
    public function createPublisherLogObject($publishedObject = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createPublisherLogObject', [$publishedObject]);

        return parent::createPublisherLogObject($publishedObject);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssociations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssociations', []);

        return parent::getAssociations();
    }

    /**
     * {@inheritDoc}
     */
    public function setAssociations($associations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAssociations', [$associations]);

        return parent::setAssociations($associations);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeKeys()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeKeys', []);

        return parent::getAttributeKeys();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttributeKeys($attributeKeys)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttributeKeys', [$attributeKeys]);

        return parent::setAttributeKeys($attributeKeys);
    }

    /**
     * {@inheritDoc}
     */
    public function getForms()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForms', []);

        return parent::getForms();
    }

    /**
     * {@inheritDoc}
     */
    public function setForms($forms)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForms', [$forms]);

        return parent::setForms($forms);
    }

}
