<?php

namespace DoctrineProxies\__CG__\PortlandLabs\Concrete5\MigrationTool\Entity\Import;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Page extends \PortlandLabs\Concrete5\MigrationTool\Entity\Import\Page implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = ['attributes' => NULL, 'areas' => NULL];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->attributes, $this->areas);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'original_path', 'batch_path', 'public_date', 'name', 'filename', 'type', 'template', 'user', 'description', 'position', 'package', 'is_at_root', 'is_global', 'attributes', 'areas', 'collection', 'normalizePath'];
        }

        return ['__isInitialized__', 'id', 'original_path', 'batch_path', 'public_date', 'name', 'filename', 'type', 'template', 'user', 'description', 'position', 'package', 'is_at_root', 'is_global', 'collection', 'normalizePath'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Page $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->attributes, $this->areas);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function canNormalizePath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'canNormalizePath', []);

        return parent::canNormalizePath();
    }

    /**
     * {@inheritDoc}
     */
    public function setNormalizePath($normalizePath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNormalizePath', [$normalizePath]);

        return parent::setNormalizePath($normalizePath);
    }

    /**
     * {@inheritDoc}
     */
    public function getID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getID', []);

        return parent::getID();
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginalPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginalPath', []);

        return parent::getOriginalPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginalPath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginalPath', [$path]);

        return parent::setOriginalPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function getBatchPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBatchPath', []);

        return parent::getBatchPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setBatchPath($batch_path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBatchPath', [$batch_path]);

        return parent::setBatchPath($batch_path);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilename()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilename', []);

        return parent::getFilename();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilename($filename)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilename', [$filename]);

        return parent::setFilename($filename);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicDate', []);

        return parent::getPublicDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicDate($public_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicDate', [$public_date]);

        return parent::setPublicDate($public_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCollection', []);

        return parent::getCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function setCollection($collection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCollection', [$collection]);

        return parent::setCollection($collection);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemplate', []);

        return parent::getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemplate($template)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemplate', [$template]);

        return parent::setTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributes', []);

        return parent::getAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttributes($attributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttributes', [$attributes]);

        return parent::setAttributes($attributes);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeValidatorDriver()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeValidatorDriver', []);

        return parent::getAttributeValidatorDriver();
    }

    /**
     * {@inheritDoc}
     */
    public function getAreas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAreas', []);

        return parent::getAreas();
    }

    /**
     * {@inheritDoc}
     */
    public function setAreas($areas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAreas', [$areas]);

        return parent::setAreas($areas);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublisherValidator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublisherValidator', []);

        return parent::getPublisherValidator();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAtRoot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAtRoot', []);

        return parent::getIsAtRoot();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAtRoot($is_at_root)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAtRoot', [$is_at_root]);

        return parent::setIsAtRoot($is_at_root);
    }

    /**
     * {@inheritDoc}
     */
    public function getPackage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPackage', []);

        return parent::getPackage();
    }

    /**
     * {@inheritDoc}
     */
    public function setPackage($package)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPackage', [$package]);

        return parent::setPackage($package);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsGlobal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsGlobal', []);

        return parent::getIsGlobal();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsGlobal($is_global)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsGlobal', [$is_global]);

        return parent::setIsGlobal($is_global);
    }

    /**
     * {@inheritDoc}
     */
    public function createPublisherLogObject($publishedObject = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createPublisherLogObject', [$publishedObject]);

        return parent::createPublisherLogObject($publishedObject);
    }

}
